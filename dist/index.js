"use strict";var i=function(r,e){return function(){return e||r((e={exports:{}}).exports,e),e.exports}};var d=i(function(ei,h){"use strict";var Nr=require("buffer").Buffer;h.exports=Nr});var x=i(function(ii,B){"use strict";function Mr(){throw new Error("not implemented")}B.exports=Mr});var t=i(function(ti,E){"use strict";var Ur=require("@stdlib/assert/has-node-buffer-support"),Rr=d(),Ir=x(),q;Ur()?q=Rr:q=Ir;E.exports=q});var A=i(function(ai,V){"use strict";var jr=require("@stdlib/assert/is-function"),Pr=t(),kr=jr(Pr.allocUnsafe);V.exports=kr});var b=i(function(ui,T){"use strict";var Cr=require("@stdlib/assert/is-nonnegative-integer"),Dr=require("@stdlib/string/format"),Jr=t();function _r(r){if(!Cr(r))throw new TypeError(Dr("invalid argument. Must provide a nonnegative integer. Value: `%s`.",r));return Jr.allocUnsafe(r)}T.exports=_r});var L=i(function(ni,F){"use strict";var Gr=require("@stdlib/assert/is-nonnegative-integer"),Hr=require("@stdlib/string/format"),Kr=t();function Qr(r){if(!Gr(r))throw new TypeError(Hr("invalid argument. Must provide a nonnegative integer. Value: `%s`.",r));return new Kr(r)}F.exports=Qr});var N=i(function(oi,S){"use strict";var Wr=A(),Xr=b(),Yr=L(),g;Wr?g=Xr:g=Yr;S.exports=g});var U=i(function(si,M){"use strict";var Zr=require("@stdlib/assert/is-function"),$r=t(),zr=Zr($r.from);M.exports=zr});var I=i(function(fi,R){"use strict";var Or=require("@stdlib/assert/is-collection"),re=require("@stdlib/string/format"),ee=t();function ie(r){if(!Or(r))throw new TypeError(re("invalid argument. Must provide an array-like object. Value: `%s`.",r));return ee.from(r)}R.exports=ie});var P=i(function(vi,j){"use strict";var te=require("@stdlib/assert/is-collection"),ae=require("@stdlib/string/format"),ue=t();function ne(r){if(!te(r))throw new TypeError(ae("invalid argument. Must provide an array-like object. Value: `%s`.",r));return new ue(r)}j.exports=ne});var m=i(function(mi,k){"use strict";var oe=U(),se=I(),fe=P(),p;oe?p=se:p=fe;k.exports=p});var l=i(function(li,D){"use strict";var C=require("@stdlib/process/node-version"),ve=C?parseInt(C.split(".")[0],10):-1;D.exports=ve});var _=i(function(qi,J){"use strict";var me=require("@stdlib/assert/is-function"),le=t(),qe=l(),ge=me(le.from)&&qe>=5;J.exports=ge});var Q=i(function(gi,K){"use strict";var pe=require("@stdlib/assert/is-arraybuffer"),G=require("@stdlib/assert/is-nonnegative-integer").isPrimitive,H=t(),f=require("@stdlib/string/format"),ce=l();function ye(r,e,a){var n,s;if(!pe(r))throw new TypeError(f("invalid argument. First argument must be an ArrayBuffer. Value: `%s`.",r));if(arguments.length>1){if(!G(e))throw new TypeError(f("invalid argument. Second argument must be a nonnegative integer. Value: `%s`.",e));if(e>r.byteLength)throw new RangeError(f("invalid argument. Second argument must not exceed the number of bytes in the input ArrayBuffer. Value: `%s`.",e));if(n=e,arguments.length>2){if(!G(a))throw new TypeError(f("invalid argument. Last argument must be a nonnegative integer. Value: `%s`.",a));if(a>r.byteLength)throw new RangeError(f("invalid argument. Last argument must not exceed the number of bytes in the input ArrayBuffer. Value: `%s`.",a));s=a}else s=r.byteLength-n}else n=0,s=r.byteLength;return s===0&&ce<6?H.from([]):H.from(r,n,s)}K.exports=ye});var z=i(function(pi,$){"use strict";var we=require("@stdlib/assert/is-arraybuffer"),W=require("@stdlib/assert/is-nonnegative-integer").isPrimitive,X=t(),Y=require("@stdlib/array/uint8"),Z=m(),v=require("@stdlib/string/format"),he=l();function de(r,e,a){var n;if(!we(r))throw new TypeError(v("invalid argument. First argument must be an ArrayBuffer. Value: `%s`.",r));if(arguments.length>1){if(!W(e))throw new TypeError(v("invalid argument. Second argument must be a nonnegative integer. Value: `%s`.",e));if(e>r.byteLength)throw new RangeError(v("invalid argument. Second argument must not exceed the number of bytes in the input ArrayBuffer. Value: `%s`.",e));if(arguments.length>2){if(!W(a))throw new TypeError(v("invalid argument. Last argument must be a nonnegative integer. Value: `%s`.",a));if(a>r.byteLength)throw new RangeError(v("invalid argument. Last argument must not exceed the number of bytes in the input ArrayBuffer. Value: `%s`.",a));n=a}else n=r.byteLength-e;return Z(new Y(r,e,n))}return he<3?Z(new Y(r)):r.byteLength===0?new X([]):new X(r)}$.exports=de});var rr=i(function(ci,O){"use strict";var Be=_(),xe=Q(),Ee=z(),c;Be?c=xe:c=Ee;O.exports=c});var ir=i(function(yi,er){"use strict";var Ve=require("@stdlib/assert/is-function"),Ae=t(),Te=Ve(Ae.from);er.exports=Te});var ar=i(function(wi,tr){"use strict";var be=require("@stdlib/assert/is-buffer"),Fe=require("@stdlib/string/format"),Le=t();function Se(r){if(!be(r))throw new TypeError(Fe("invalid argument. Must provide a Buffer. Value: `%s`.",r));return Le.from(r)}tr.exports=Se});var nr=i(function(hi,ur){"use strict";var Ne=require("@stdlib/assert/is-buffer"),Me=require("@stdlib/string/format"),Ue=t();function Re(r){if(!Ne(r))throw new TypeError(Me("invalid argument. Must provide a Buffer. Value: `%s`.",r));return new Ue(r)}ur.exports=Re});var sr=i(function(di,or){"use strict";var Ie=ir(),je=ar(),Pe=nr(),y;Ie?y=je:y=Pe;or.exports=y});var vr=i(function(Bi,fr){"use strict";var ke=require("@stdlib/assert/is-function"),Ce=t(),De=ke(Ce.from);fr.exports=De});var pr=i(function(xi,gr){"use strict";var mr=require("@stdlib/assert/is-string").isPrimitive,lr=require("@stdlib/string/format"),qr=t();function Je(r,e){if(!mr(r))throw new TypeError(lr("invalid argument. First argument must be a string. Value: `%s`.",r));if(arguments.length>1){if(!mr(e))throw new TypeError(lr("invalid argument. Second argument must be a string. Value: `%s`.",e));return qr.from(r,e)}return qr.from(r,"utf8")}gr.exports=Je});var dr=i(function(Ei,hr){"use strict";var cr=require("@stdlib/assert/is-string").isPrimitive,yr=require("@stdlib/string/format"),wr=t();function _e(r,e){if(!cr(r))throw new TypeError(yr("invalid argument. First argument must be a string. Value: `%s`.",r));if(arguments.length>1){if(!cr(e))throw new TypeError(yr("invalid argument. Second argument must be a string. Value: `%s`.",e));return new wr(r,e)}return new wr(r,"utf8")}hr.exports=_e});var xr=i(function(Vi,Br){"use strict";var Ge=vr(),He=pr(),Ke=dr(),w;Ge?w=He:w=Ke;Br.exports=w});var Vr=i(function(Ai,Er){"use strict";var Qe=require("@stdlib/assert/is-array"),We=m();function Xe(r,e){return e&&e.type==="Buffer"&&Qe(e.data)?We(e.data):e}Er.exports=Xe});var Tr=i(function(Ti,Ar){"use strict";var Ye=Vr();Ar.exports=Ye});var Fr=i(function(bi,br){"use strict";var Ze=require("@stdlib/assert/is-buffer"),$e=require("@stdlib/string/format");function ze(r){var e,a;if(!Ze(r))throw new TypeError($e("invalid argument. Must provide a Buffer. Value: `%s`.",r));for(e={},e.type="Buffer",e.data=[],a=0;a<r.length;a++)e.data.push(r[a]);return e}br.exports=ze});var Sr=i(function(Fi,Lr){"use strict";var Oe=Fr();Lr.exports=Oe});var o=require("@stdlib/utils/define-read-only-property"),u={};o(u,"allocUnsafe",N());o(u,"Buffer",t());o(u,"array2buffer",m());o(u,"arraybuffer2buffer",rr());o(u,"copyBuffer",sr());o(u,"string2buffer",xr());o(u,"reviveBuffer",Tr());o(u,"buffer2json",Sr());module.exports=u;
/**
* @license Apache-2.0
*
* Copyright (c) 2018 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
/**
* @license Apache-2.0
*
* Copyright (c) 2021 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
//# sourceMappingURL=index.js.map
